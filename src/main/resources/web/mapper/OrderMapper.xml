<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="web.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="web.entity.Order">
    <id column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="TIME" jdbcType="TIMESTAMP" property="time" />
    <result column="PRICE" jdbcType="DOUBLE" property="price" />
    <result column="RECEIVER" jdbcType="VARCHAR" property="receiver" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    ORDER_ID, TIME, PRICE, RECEIVER, PHONE, ADDRESS, STATUS, USER_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="web.entity.Order">
    insert into order (ORDER_ID, TIME, PRICE, 
      RECEIVER, PHONE, ADDRESS, 
      STATUS, USER_ID)
    values (#{orderId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{price,jdbcType=DOUBLE}, 
      #{receiver,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="web.entity.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="time != null">
        TIME,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="receiver != null">
        RECEIVER,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="web.entity.Order">
    update order
    <set>
      <if test="time != null">
        TIME = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DOUBLE},
      </if>
      <if test="receiver != null">
        RECEIVER = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="web.entity.Order">
    update order
    set TIME = #{time,jdbcType=TIMESTAMP},
      PRICE = #{price,jdbcType=DOUBLE},
      RECEIVER = #{receiver,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      USER_ID = #{userId,jdbcType=INTEGER}
    where ORDER_ID = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>